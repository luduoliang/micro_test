// Code generated by protoc-gen-micro. DO NOT EDIT.
// source: sessions.proto

package sessions

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	timestamp "github.com/golang/protobuf/ptypes/timestamp"
	math "math"
)

import (
	context "context"
	client "github.com/micro/go-micro/client"
	server "github.com/micro/go-micro/server"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ client.Option
var _ server.Option

// Client API for Waiter service

type WaiterService interface {
	AddPddSessions(ctx context.Context, in *RequestAddPddSessions, opts ...client.CallOption) (*ResponseAddPddSessions, error)
	UpdatePddSessions(ctx context.Context, in *RequestUpdatePddSessions, opts ...client.CallOption) (*ResponseUpdatePddSessions, error)
	DeletePddSessions(ctx context.Context, in *RequestDeletePddSessions, opts ...client.CallOption) (*ResponseDeletePddSessions, error)
	GetPddSessionsInfo(ctx context.Context, in *RequestGetPddSessionsInfo, opts ...client.CallOption) (*ResponseGetPddSessionsInfo, error)
	GetPddSessionsList(ctx context.Context, in *RequestGetPddSessionsList, opts ...client.CallOption) (*ResponseGetPddSessionsList, error)
}

type waiterService struct {
	c    client.Client
	name string
}

func NewWaiterService(name string, c client.Client) WaiterService {
	if c == nil {
		c = client.NewClient()
	}
	if len(name) == 0 {
		name = "sessions"
	}
	return &waiterService{
		c:    c,
		name: name,
	}
}

func (c *waiterService) AddPddSessions(ctx context.Context, in *RequestAddPddSessions, opts ...client.CallOption) (*ResponseAddPddSessions, error) {
	req := c.c.NewRequest(c.name, "Waiter.AddPddSessions", in)
	out := new(ResponseAddPddSessions)
	err := c.c.Call(ctx, req, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *waiterService) UpdatePddSessions(ctx context.Context, in *RequestUpdatePddSessions, opts ...client.CallOption) (*ResponseUpdatePddSessions, error) {
	req := c.c.NewRequest(c.name, "Waiter.UpdatePddSessions", in)
	out := new(ResponseUpdatePddSessions)
	err := c.c.Call(ctx, req, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *waiterService) DeletePddSessions(ctx context.Context, in *RequestDeletePddSessions, opts ...client.CallOption) (*ResponseDeletePddSessions, error) {
	req := c.c.NewRequest(c.name, "Waiter.DeletePddSessions", in)
	out := new(ResponseDeletePddSessions)
	err := c.c.Call(ctx, req, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *waiterService) GetPddSessionsInfo(ctx context.Context, in *RequestGetPddSessionsInfo, opts ...client.CallOption) (*ResponseGetPddSessionsInfo, error) {
	req := c.c.NewRequest(c.name, "Waiter.GetPddSessionsInfo", in)
	out := new(ResponseGetPddSessionsInfo)
	err := c.c.Call(ctx, req, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *waiterService) GetPddSessionsList(ctx context.Context, in *RequestGetPddSessionsList, opts ...client.CallOption) (*ResponseGetPddSessionsList, error) {
	req := c.c.NewRequest(c.name, "Waiter.GetPddSessionsList", in)
	out := new(ResponseGetPddSessionsList)
	err := c.c.Call(ctx, req, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// Server API for Waiter service

type WaiterHandler interface {
	AddPddSessions(context.Context, *RequestAddPddSessions, *ResponseAddPddSessions) error
	UpdatePddSessions(context.Context, *RequestUpdatePddSessions, *ResponseUpdatePddSessions) error
	DeletePddSessions(context.Context, *RequestDeletePddSessions, *ResponseDeletePddSessions) error
	GetPddSessionsInfo(context.Context, *RequestGetPddSessionsInfo, *ResponseGetPddSessionsInfo) error
	GetPddSessionsList(context.Context, *RequestGetPddSessionsList, *ResponseGetPddSessionsList) error
}

func RegisterWaiterHandler(s server.Server, hdlr WaiterHandler, opts ...server.HandlerOption) error {
	type waiter interface {
		AddPddSessions(ctx context.Context, in *RequestAddPddSessions, out *ResponseAddPddSessions) error
		UpdatePddSessions(ctx context.Context, in *RequestUpdatePddSessions, out *ResponseUpdatePddSessions) error
		DeletePddSessions(ctx context.Context, in *RequestDeletePddSessions, out *ResponseDeletePddSessions) error
		GetPddSessionsInfo(ctx context.Context, in *RequestGetPddSessionsInfo, out *ResponseGetPddSessionsInfo) error
		GetPddSessionsList(ctx context.Context, in *RequestGetPddSessionsList, out *ResponseGetPddSessionsList) error
	}
	type Waiter struct {
		waiter
	}
	h := &waiterHandler{hdlr}
	return s.Handle(s.NewHandler(&Waiter{h}, opts...))
}

type waiterHandler struct {
	WaiterHandler
}

func (h *waiterHandler) AddPddSessions(ctx context.Context, in *RequestAddPddSessions, out *ResponseAddPddSessions) error {
	return h.WaiterHandler.AddPddSessions(ctx, in, out)
}

func (h *waiterHandler) UpdatePddSessions(ctx context.Context, in *RequestUpdatePddSessions, out *ResponseUpdatePddSessions) error {
	return h.WaiterHandler.UpdatePddSessions(ctx, in, out)
}

func (h *waiterHandler) DeletePddSessions(ctx context.Context, in *RequestDeletePddSessions, out *ResponseDeletePddSessions) error {
	return h.WaiterHandler.DeletePddSessions(ctx, in, out)
}

func (h *waiterHandler) GetPddSessionsInfo(ctx context.Context, in *RequestGetPddSessionsInfo, out *ResponseGetPddSessionsInfo) error {
	return h.WaiterHandler.GetPddSessionsInfo(ctx, in, out)
}

func (h *waiterHandler) GetPddSessionsList(ctx context.Context, in *RequestGetPddSessionsList, out *ResponseGetPddSessionsList) error {
	return h.WaiterHandler.GetPddSessionsList(ctx, in, out)
}
